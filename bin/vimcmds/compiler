#!/bin/sh
# This script will compile or run another finishing operation on a document or project.
#
# Compiles .tex. groff (.mom, .ms), .rmd, .md, make and cmake projects(with build directory).
# Opens .sent files as sent presentations.
# Runs scripts based on extention or shebang

pause() {
  echo
  read -p "Press key to continue..." tmp
}

make_build() {
  if [ -f Makefile ] || [ -f makefile ]; then
    make -j && exit 0 || exit 1
  fi
}

cmake_build() {
  if [ -d build ]; then
    cd build || exit
    if [ -f Makefile ] || [ -f makefile ]; then
      make -j && exit 0 || exit 1
    elif [ -f build.ninja ]; then
      ninja && exit 0 || exit 1
    fi
  fi
}

file=$(readlink -f "$1")
dir=$(dirname "$file")
base="${file%.*}"

make_build
cmake_build
[ -f Cargo.toml ] && { cargo build && exit 0 || exit 1; }

textype() {
  command="pdflatex"
  (sed 5q "$file" | grep -i -q 'xelatex') && command="xelatex"
  $command --output-directory="$dir" "$base" &&
    grep -i addbibresource "$file" > /dev/null &&
    biber --input-directory "$dir" "$base" &&
    $command --output-directory="$dir" "$base" &&
    $command --output-directory="$dir" "$base"
}

case "$file" in
  *\.ms) refer -PS -e "$file" | groff -me -ms -kejpt -T pdf > "$base".pdf ;;
  *\.mom) refer -PS -e "$file" | groff -mom -kejpt -T pdf > "$base".pdf ;;
  *\.rmd) echo "require(rmarkdown); render('$file')" | R -q --vanilla ;;
  *\.tex) textype "$file" ;;
  *\.md) pandoc "$file" --pdf-engine=xelatex -o "$base".pdf ;;
  *\.c) cc -Og -ggdb3 "$file" -o "$base" && "$base" && pause || exit 1 ;;
  *\.cpp) c++ -Og -ggdb3 "$file" -o "$base" && "$base" && pause || exit 1 ;;
  *\.py) python "$file" && pause || exit 1 ;;
  *\.r) Rscript "$file" && pause || exit 1 ;;
  *\.go) go run "$file" && pause || exit 1 ;;
  *\.lua) lua "$file" && pause || exit 1 ;;
  *\.sent) setsid sent "$file" 2> /dev/null & ;;
  *) sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac
